name: ESP32-S3 W5500 Simple Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git wget curl flex bison gperf python3 python3-pip \
          python3-setuptools python3-venv cmake ninja-build \
          libffi-dev libssl-dev dfu-util libusb-1.0-0 \
          build-essential gcc g++ gcc-multilib g++-multilib \
          pkg-config autoconf automake libtool unzip

    - name: Install ESP-IDF
      run: |
        mkdir -p ~/esp
        cd ~/esp
        git clone -b ${{ env.ESP_IDF_VERSION }} --recursive https://github.com/espressif/esp-idf.git
        cd esp-idf
        ./install.sh esp32s3
        
        # Install Python requirements for ESP-IDF
        python3 -m pip install -r tools/requirements/requirements.core.txt
        python3 -m pip install click pyserial pyparsing
        
        source export.sh
        
        # Test ESP-IDF functionality
        cd /tmp && idf.py --help > /dev/null && echo "ESP-IDF ready"
        
        echo "IDF_PATH=$HOME/esp/esp-idf" >> $GITHUB_ENV
        echo "PATH=$HOME/esp/esp-idf/tools:$PATH" >> $GITHUB_ENV

    - name: Clone nanoFramework
      run: |
        git clone --recursive https://github.com/nanoframework/nf-interpreter.git

    - name: Configure Build
      run: |
        source $HOME/esp/esp-idf/export.sh
        cd nf-interpreter
        
        # 配置ESP32-S3 + W5500构建
        cmake -G Ninja \
          -DCMAKE_BUILD_TYPE=MinSizeRel \
          -DCMAKE_TOOLCHAIN_FILE=$HOME/esp/esp-idf/tools/cmake/toolchain-esp32s3.cmake \
          -DIDF_TARGET=esp32s3 \
          -DTOOLCHAIN_PREFIX=xtensa-esp32s3-elf \
          -DRTOS=ESP32 \
          -DNF_BUILD_RTM=ON \
          -DNF_FEATURE_DEBUGGER=OFF \
          -DNF_FEATURE_RTC=ON \
          -DAPI_System.IO.FileSystem=ON \
          -DAPI_Windows.Devices.Gpio=ON \
          -DAPI_Windows.Devices.Spi=ON \
          -DAPI_Windows.Devices.I2c=ON \
          -DAPI_Windows.Networking=ON \
          -DAPI_nanoFramework.Networking.ESP32.Ethernet=ON \
          -B build \
          -S .

    - name: Build firmware
      run: |
        cd nf-interpreter
        
        # Copy the CMake presets file to nf-interpreter directory
        cp ../CMakePresets-W5500.json CMakePresets.json
        
        # Configure and build using CMake presets
        cmake --preset ESP32_S3_W5500_Release
        cmake --build --preset ESP32_S3_W5500_Release --target nanoCLR
        
        # Check if build was successful
        if [ -f "build/nanoCLR.bin" ]; then
          echo "✅ nanoCLR.bin built successfully"
          ls -la build/nanoCLR*
        else
          echo "❌ Build failed - nanoCLR.bin not found"
          exit 1
        fi

    - name: Upload Firmware
      uses: actions/upload-artifact@v4
      with:
        name: ESP32-S3-W5500-nanoCLR
        path: |
          nf-interpreter/build/nanoCLR.bin
          nf-interpreter/build/nanoCLR.elf
          nf-interpreter/build/partitions.bin
          nf-interpreter/build/bootloader/bootloader.bin
        retention-days: 7